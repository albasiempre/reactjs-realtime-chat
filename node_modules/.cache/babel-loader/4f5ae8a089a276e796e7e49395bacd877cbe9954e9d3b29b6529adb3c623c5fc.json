{"ast":null,"code":"//アクションに応じて状態(state)を更新する仕組み\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n    case \"LOGIN_ERROR\":\n      return {\n        user: null,\n        isFetching: false,\n        error: action.payload\n      };\n    case \"FOLLOW\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          followings: [...state.user.following, action.payload]\n        }\n      };\n    case \"UNFOLLOW\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          followings: state.user.followings.filter(following => following !== action.payload)\n        }\n      };\n    default:\n      return state;\n  }\n};\n_c = AuthReducer;\nexport default AuthReducer;\nvar _c;\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"names":["AuthReducer","state","action","type","user","isFetching","error","payload","followings","following","filter","_c","$RefreshReg$"],"sources":["/Users/akihisa/healthcare-social-app-heroku/frontend/src/context/AuthReducer.js"],"sourcesContent":["//アクションに応じて状態(state)を更新する仕組み\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false,\n      };\n    case \"LOGIN_ERROR\":\n      return {\n        user: null,\n        isFetching: false,\n        error: action.payload,\n      };\n    case \"FOLLOW\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          followings: [...state.user.following, action.payload],\n        },\n      };\n    case \"UNFOLLOW\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          followings: state.user.followings.filter(\n            (following) => following !== action.payload\n          ),\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QACLC,IAAI,EAAE,IAAI;QACVC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,eAAe;MAClB,OAAO;QACLF,IAAI,EAAEF,MAAM,CAACK,OAAO;QACpBF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACLF,IAAI,EAAE,IAAI;QACVC,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAEJ,MAAM,CAACK;MAChB,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACL,GAAGN,KAAK;QACRG,IAAI,EAAE;UACJ,GAAGH,KAAK,CAACG,IAAI;UACbI,UAAU,EAAE,CAAC,GAAGP,KAAK,CAACG,IAAI,CAACK,SAAS,EAAEP,MAAM,CAACK,OAAO;QACtD;MACF,CAAC;IACH,KAAK,UAAU;MACb,OAAO;QACL,GAAGN,KAAK;QACRG,IAAI,EAAE;UACJ,GAAGH,KAAK,CAACG,IAAI;UACbI,UAAU,EAAEP,KAAK,CAACG,IAAI,CAACI,UAAU,CAACE,MAAM,CACrCD,SAAS,IAAKA,SAAS,KAAKP,MAAM,CAACK,OACtC;QACF;MACF,CAAC;IAEH;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAACU,EAAA,GA1CIX,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}