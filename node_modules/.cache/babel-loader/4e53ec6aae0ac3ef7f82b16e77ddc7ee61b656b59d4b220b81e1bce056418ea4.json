{"ast":null,"code":"import AxiosWrapper from \"./lib/axiosWrapper\";\nexport const loginCall = async (user, dispatch) => {\n  dispatch({\n    type: \"LOGIN_START\"\n  });\n  try {\n    // console.log(\"======loginCall\");\n    // APIのルーティング設定を参照している\n    const response = await AxiosWrapper.create().post(\"api/auth/login\", user);\n    console.log(res);\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: response.data\n    });\n    return response;\n  } catch (err) {\n    dispatch({\n      type: \"LOGIN_ERROR\",\n      payload: err\n    });\n    return err.response;\n  }\n};","map":{"version":3,"names":["AxiosWrapper","loginCall","user","dispatch","type","response","create","post","console","log","res","payload","data","err"],"sources":["/Users/akihisa/healthcare-social-app-separate-frontend/src/apiCalls.js"],"sourcesContent":["import AxiosWrapper from \"./lib/axiosWrapper\";\n\n\nexport const loginCall = async (user, dispatch) => {\n  dispatch({ type: \"LOGIN_START\" });\n  try {\n    // console.log(\"======loginCall\");\n    // APIのルーティング設定を参照している\n    const response = await AxiosWrapper.create().post(\"api/auth/login\", user);\n    console.log(res);\n    dispatch({ type: \"LOGIN_SUCCESS\", payload: response.data });\n    return response;\n  } catch (err) {\n    dispatch({ type: \"LOGIN_ERROR\", payload: err });\n    return err.response;\n  }\n};"],"mappings":"AAAA,OAAOA,YAAY,MAAM,oBAAoB;AAG7C,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;EACjDA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAc,CAAC,CAAC;EACjC,IAAI;IACF;IACA;IACA,MAAMC,QAAQ,GAAG,MAAML,YAAY,CAACM,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,gBAAgB,EAAEL,IAAI,CAAC;IACzEM,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAChBP,QAAQ,CAAC;MAAEC,IAAI,EAAE,eAAe;MAAEO,OAAO,EAAEN,QAAQ,CAACO;IAAK,CAAC,CAAC;IAC3D,OAAOP,QAAQ;EACjB,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZV,QAAQ,CAAC;MAAEC,IAAI,EAAE,aAAa;MAAEO,OAAO,EAAEE;IAAI,CAAC,CAAC;IAC/C,OAAOA,GAAG,CAACR,QAAQ;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}